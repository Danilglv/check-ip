{"ast":null,"code":"import _classCallCheck from \"C:\\\\OpenServer\\\\domains\\\\check-ip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OpenServer\\\\domains\\\\check-ip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OpenServer\\\\domains\\\\check-ip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OpenServer\\\\domains\\\\check-ip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OpenServer\\\\domains\\\\check-ip\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\OpenServer\\\\domains\\\\check-ip\\\\src\\\\CheckIp.js\";\nimport React, { Component } from 'react';\n\nvar CheckIp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckIp, _Component);\n\n  function CheckIp(props) {\n    var _this;\n\n    _classCallCheck(this, CheckIp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckIp).call(this, props));\n\n    if (localStorage.getItem('listArray') == null) {\n      _this.state = {\n        ip: '',\n        list: ['94.180.80.58'],\n        info: ['Новосибирск']\n      };\n    } else if (localStorage.getItem('ipData') == null) {\n      _this.state = {\n        ip: '',\n        list: ['94.180.80.58'],\n        info: ['Новосибирск']\n      };\n    } else {\n      _this.state = {\n        ip: '',\n        list: JSON.parse(localStorage.getItem('listArray')),\n        info: JSON.parse(localStorage.getItem('ipData'))\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(CheckIp, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var listArray = this.state.list;\n      var url = 'https://api.2ip.ua/geo.json?ip=';\n      var ipData = this.state.info;\n      console.log(this.state.info);\n      fetch(url + this.state.ip).then(function (response) {\n        if (response.status !== 200) {\n          alert('Looks like there was a problem. Status Code: ' + response.status);\n          return;\n        }\n\n        response.json().then(function (data) {\n          ipData.push(data.city_rus);\n          console.log(this);\n          localStorage.setItem('ipData', JSON.stringify(ipData));\n          listArray.push(data.ip);\n          console.log(listArray);\n          localStorage.setItem('listArray', JSON.stringify(listArray));\n          this.setState({\n            list: JSON.parse(localStorage.getItem('listArray')),\n            info: JSON.parse(localStorage.getItem('ipData')),\n            ip: ''\n          });\n        });\n      }); // .catch(function(err) { \n      // console.log('Fetch Error :-S', err); \n      // });\n\n      console.log(this.handleSubmit);\n      this.setState({\n        // list: JSON.parse(localStorage.getItem('listArray')),\n        // info: JSON.parse(localStorage.getItem('ipData')),\n        ip: ''\n      }); // console.log(ipData);\n    }\n  }, {\n    key: \"handleIpChange\",\n    value: function handleIpChange(event) {\n      this.setState({\n        ip: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 ip-\\u0430\\u0434\\u0440\\u0435\\u0441\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Ip-\\u0430\\u0434\\u0440\\u0435\\u0441...\",\n        value: this.state.ip,\n        onChange: this.handleIpChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.list.map(function (adress, index) {\n        return React.createElement(\"ul\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Ip-\\u0430\\u0434\\u0440\\u0435\\u0441: \", adress));\n      }), this.state.info.map(function (info, index) {\n        return React.createElement(\"ul\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"\\u0413\\u043E\\u0440\\u043E\\u0434: \", info));\n      })));\n    }\n  }]);\n\n  return CheckIp;\n}(Component);\n\nexport default CheckIp;","map":{"version":3,"sources":["C:\\OpenServer\\domains\\check-ip\\src\\CheckIp.js"],"names":["React","Component","CheckIp","props","localStorage","getItem","state","ip","list","info","JSON","parse","event","preventDefault","listArray","url","ipData","console","log","fetch","then","response","status","alert","json","data","push","city_rus","setItem","stringify","setState","handleSubmit","target","value","bind","handleIpChange","map","adress","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CheckIp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (localStorage.getItem('listArray') == null) {\r\n      this.state = {\r\n        ip: '',\r\n        list: ['94.180.80.58'],\r\n        info: ['Новосибирск']\r\n      }\r\n    } else if (localStorage.getItem('ipData') == null) {\r\n        this.state = {\r\n        ip: '',\r\n        list: ['94.180.80.58'],\r\n        info: ['Новосибирск']\r\n      }\r\n    } else {\r\n      this.state = {\r\n        ip: '',\r\n        list: JSON.parse(localStorage.getItem('listArray')),\r\n        info: JSON.parse(localStorage.getItem('ipData'))\r\n      }\r\n    }\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    let listArray = this.state.list;\r\n    let url = 'https://api.2ip.ua/geo.json?ip=';\r\n    let ipData = this.state.info;\r\n    console.log(this.state.info);\r\n    fetch(url + this.state.ip).then(function(response) {\r\n        if (response.status !== 200) { \r\n        alert('Looks like there was a problem. Status Code: ' + \r\n        response.status); \r\n        return; \r\n        }\r\n\r\n         response.json().then(function(data) {\r\n          ipData.push(data.city_rus);\r\n          console.log(this); \r\n\r\n          localStorage.setItem('ipData', JSON.stringify(ipData)); \r\n\r\n          listArray.push(data.ip);\r\n          console.log(listArray);\r\n          localStorage.setItem('listArray', JSON.stringify(listArray));\r\n\r\n                  this.setState({\r\n                  list: JSON.parse(localStorage.getItem('listArray')),\r\n                  info: JSON.parse(localStorage.getItem('ipData')),\r\n                  ip: ''\r\n            });\r\n\r\n        }); \r\n      }\r\n      )\r\n      // .catch(function(err) { \r\n      // console.log('Fetch Error :-S', err); \r\n      // });\r\n      console.log(this.handleSubmit);\r\n      \r\n        this.setState({\r\n          // list: JSON.parse(localStorage.getItem('listArray')),\r\n          // info: JSON.parse(localStorage.getItem('ipData')),\r\n          ip: ''\r\n      });\r\n\r\n       \r\n     // console.log(ipData);\r\n  }\r\n\r\n  handleIpChange(event) {\r\n    this.setState({ip: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          <label>\r\n            <p>Введите ip-адрес</p>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"Ip-адрес...\"\r\n            value={this.state.ip}\r\n            onChange={this.handleIpChange.bind(this)} \r\n             />\r\n          </label>\r\n          <button>Submit</button>\r\n        </form>\r\n        <div>\r\n          {this.state.list.map((adress, index) => \r\n              <ul key={index}>\r\n                <li key={index}>Ip-адрес: {adress}</li>\r\n              </ul>\r\n            )}\r\n\r\n          {this.state.info.map((info, index) => \r\n                        <ul key={index}>\r\n                          <li key={index}>Город: {info}</li>\r\n                        </ul>\r\n                      )}\r\n        </div>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default CheckIp;\r\n"]},"metadata":{},"sourceType":"module"}